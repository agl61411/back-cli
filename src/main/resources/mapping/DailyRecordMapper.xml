<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yi.backcli.dao.DailyRecordDao">

    <resultMap id="recordMap" type="com.yi.backcli.entity.DailyRecord">
        <result property="id" column="id" />
        <result property="createdTime" column="created_time" />
        <result property="modifiedTime" column="modified_time" />
        <result property="deprecated" column="deprecated" />
        <result property="recordTime" column="record_time" />
        <result property="accountId" column="account_id" />
        <result property="accountId" column="account_id" />
        <collection property="toDoList" column="id" javaType="List" ofType="com.yi.backcli.entity.ToDo" select="searchToDoListById"/>
        <collection property="consumptionList" column="id" javaType="List" ofType="com.yi.backcli.entity.Consumption" select="searchConsumptionListById"/>
    </resultMap>

    <select id="findFullRecordByTime" resultMap="recordMap">
        select id, created_time, modified_time, deprecated, record_time, account_id
        from daily_record
        where record_time = #{recordTime}
          and account_id = #{accountId};
    </select>
    <select id="searchToDoListById" resultType="com.yi.backcli.entity.ToDo">
        select id, created_time, modified_time, deprecated, content, detail, type, completed, record_id
        from to_do
        where record_id = #{id};
    </select>
    <select id="searchConsumptionListById" resultType="com.yi.backcli.entity.Consumption">
        select id, created_time, modified_time, deprecated, money, content, type, record_id
        from consumption
        where record_id = #{id};
    </select>

    <select id="findRecordByTime" resultType="com.yi.backcli.entity.DailyRecord">
        select id, created_time, modified_time, deprecated, record_time, account_id
        from daily_record
        where record_time = #{recordTime}
          and account_id = #{accountId};
    </select>

    <insert id="create" parameterType="com.yi.backcli.entity.DailyRecord" useGeneratedKeys="true" flushCache="true"
            keyProperty="id">
        insert into daily_record(record_time, account_id)
        VALUES (#{recordTime}, #{accountId});
    </insert>

</mapper>
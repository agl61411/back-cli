drop database if exists backcli;

create database backcli;

use backcli;

drop table if exists account_login;

CREATE TABLE `account_login` (
      `id` bigint(20) NOT NULL AUTO_INCREMENT,
      `created_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
      `modified_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
      `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否弃用',
      `username` varchar(50) NOT NULL COMMENT '账号',
      `password` varchar(255) NOT NULL COMMENT '密码',
      PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8mb4 COMMENT='登录信息表'

drop table if exists account_info;

CREATE TABLE `account_info` (
    `id` bigint(20) NOT NULL AUTO_INCREMENT,
    `created_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
    `modified_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
    `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否弃用',
    `username` varchar(50) NOT NULL COMMENT '账号',
    `nickname` varchar(20) NOT NULL COMMENT '昵称',
    `type` varchar(20) NOT NULL COMMENT '类型',
    `account_id` bigint(20) NOT NULL COMMENT '关联id',
    PRIMARY KEY (`id`),
    UNIQUE (account_id),
    CONSTRAINT fk_account_id_1 FOREIGN KEY(account_id) REFERENCES account_login(id)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COMMENT='账号信息';

drop table if exists daily_record;

CREATE TABLE `daily_record` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `created_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `modified_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
  `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否弃用',
  `record_time` datetime NOT NULL COMMENT '记录时间',
  `account_id` bigint(20) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COMMENT='每日记录'

drop table if exists to_do;

CREATE TABLE `to_do` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `created_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `modified_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
  `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否弃用',
  `content` varchar(255) NOT NULL COMMENT '内容',
  `detail` varchar(255) NOT NULL DEFAULT '' COMMENT '详情',
  `type` varchar(10) NOT NULL COMMENT '类型',
  `completed` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否完成',
  `record_id` bigint(20) NOT NULL COMMENT '关联id',
  PRIMARY KEY (`id`),
  CONSTRAINT fk_record_id_1 FOREIGN KEY(record_id) REFERENCES daily_record(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='to_do'

drop table if exists consumption;

CREATE TABLE `consumption` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `created_time` datetime DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `modified_time` datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '修改时间',
  `deprecated` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否弃用',
  `money` decimal(10,2) NOT NULL COMMENT '金额',
  `content` varchar(255) NOT NULL COMMENT '内容',
  `type` varchar(10) NOT NULL COMMENT '类型',
  `record_id` bigint(20) NOT NULL COMMENT '关联id',
  PRIMARY KEY (`id`),
  CONSTRAINT fk_record_id_2 FOREIGN KEY(record_id) REFERENCES daily_record(id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COMMENT='消费项'


// 5.26 todo项添加目标和实际时长（非必填
alter table to_do add column target_duration tinyint unsigned comment '目标时长' after type;
alter table to_do add column actual_duration tinyint unsigned comment '实际时长' after target_duration;

// 5.26 record 添加是否完成
alter table daily_record add column finished tinyint(1) unsigned not null default '0' comment '是否已结束' after record_time;

























